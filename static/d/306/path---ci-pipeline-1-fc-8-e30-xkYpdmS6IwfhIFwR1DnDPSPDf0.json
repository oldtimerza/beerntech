{"data":{"site":{"siteMetadata":{"title":"Oldtimerza.js","author":"Bradley Morris"}},"markdownRemark":{"id":"1387915e-d502-5c26-9bc5-a26fbbf9b49b","excerpt":"Introduction One of the best ways to get a project up and running and making it easy to have the project be live and testable as soon as possible\nis to start…","html":"<h2>Introduction</h2>\n<p>One of the best ways to get a project up and running and making it easy to have the project be live and testable as soon as possible\nis to start development with a <em>Continuous Integration(CI)</em> pipeline.</p>\n<p><em>Continuous Integration</em>,from here on referred to as <em>CI</em>, is the process of having an automated process compile, test and deploy the project whenever a code change is detected in the\nrepository.</p>\n<p>For the purpose of this blog I will describe how to get a simple CI pipeline up and running for a node js based project.</p>\n<p>The technologies we’ll be using are the following:</p>\n<ul>\n<li>Github, <strong>The popular free source control host and tooling.</strong></li>\n<li>CircleCI, <strong>A service that you can hook into your</strong> <em>Github</em> <strong>repo that will pull the latest code changes and run them through a configurable process.</strong></li>\n<li>Docker, <strong>Containerisation. This isn’t too important to know what it is, but it helps us with keeping our deployment environment predictable and stable.</strong></li>\n<li>DockerHub, <strong>A free store to host our <em>Docker</em> images to enable the transfer of our production code.</strong></li>\n<li>Digital Ocean, <strong>A service that hosts Virtual Private servers that we need to host our project in the cloud.</strong></li>\n</ul>\n<h2>Step 1:</h2>","frontmatter":{"title":"Simple CI pipeline","date":"January 19, 2019"}}},"pageContext":{"slug":"/ci-pipeline-1/","previous":{"fields":{"slug":"/hi-folks/"},"frontmatter":{"title":"New Beginnings"}},"next":null}}